<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addon id="context.chinook" version="2.1.1" name="Chinook - Global Context Menu Items" provider-name="Newf">
	<requires>
		<import addon="xbmc.addon" version="17.9.910" />
		<import addon="script.module.future" version="0.17.1"/>
	</requires>
	<extension point="kodi.context.item">
        <menu id="kodi.core.main">
			<item library="quick_resume.py">
				<label>$ADDON[context.chinook 30000]</label>
				<visible>String.IsEmpty(Window(home).Property(context.chinook.quickResume)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+String.IsEqual(ListItem.dbtype,tvshow)</visible>
			</item>
            <item library="shuffle.py">
                <label>$ADDON[context.chinook 30001]</label>
                <visible>String.IsEmpty(Window(home).Property(context.chinook.shuffle)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+[String.IsEqual(ListItem.dbtype,tvshow)|String.IsEqual(ListItem.dbtype,episode)]</visible>
            </item>
			<item library="play_from_random_point.py">
                <label>$ADDON[context.chinook 30002]</label>
                <visible>String.IsEmpty(Window(home).Property(context.chinook.playFromRandomPoint)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+String.IsEqual(ListItem.dbtype,tvshow)</visible>
            </item>
			<item library="rescrape.py">
                <label>$ADDON[context.chinook 30003]</label>
                <visible>String.IsEmpty(Window(home).Property(context.chinook.rescrape)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,movie)]</visible>
            </item>
			<item library="source_select.py">
                <label>$ADDON[context.chinook 30004]</label>
                <visible>String.IsEmpty(Window(home).Property(context.chinook.sourceSelect)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,movie)]</visible>
            </item>
			<item library="find_similar.py">
                <label>$ADDON[context.chinook 30005]</label>
                <visible>String.IsEmpty(Window(home).Property(context.chinook.findSimilar)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+[String.IsEqual(ListItem.dbtype,tvshow)|String.IsEqual(ListItem.dbtype,movie)]</visible>
            </item>
			<item library="browse_show.py">
                <label>$ADDON[context.chinook 30006]</label>
                <visible>String.IsEmpty(Window(home).Property(context.chinook.browseShow)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,tvshow)]</visible>
            </item>
			<item library="browse_season.py">
				<label>$ADDON[context.chinook 30007]</label>
				<visible>String.IsEmpty(Window(home).Property(context.chinook.browseSeason)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+String.IsEqual(ListItem.dbtype,episode)</visible>
			</item>
			<item library="trakt_manager.py">
				<label>$ADDON[context.chinook 30008]</label>
				<visible>String.IsEmpty(Window(home).Property(context.chinook.traktManager)) + String.StartsWith(ListItem.path,plugin://plugin.video.chinook/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,tvshow)|String.IsEqual(ListItem.dbtype,season)|String.IsEqual(ListItem.dbtype,movie)]</visible>
			</item>
        </menu>
    </extension>
	<extension point="xbmc.service" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Chinook - Global Context Menu Items</summary>
		<summary lang="nl">Chinook - Algemene contextmenu-items</summary>
		<description lang="en">Adds Context Menu items for chinook menu items throughout Kodi</description>
		<description lang="nl">Voegt contextmenu-items toe voor chinook-menu-items in Kodi</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website></website>
		<source></source>
		<disclaimer lang="en"></disclaimer>
		<assets>
			<icon>ico-chinook-2.jpg</icon>
			<fanart>fanart-chinook-2.jpg</fanart>
		</assets>
		<news>
			Changelog 2.1.1:
			Implemented a workaround for broken future.backports module method (fixes Leia issues)

			Changelog 2.1.0:
			Refactored code to modern standards
			Use backported URL lib for py2 to ensure unicode compatibility
			Extracted out common functions and reused
			Add settings to enable/disable individual items
			Add more localizations
			Add GitHub issue templates

			Changelog 2.0.2:
			Make python version agnostic

			Changelog 2.0.1:
			Fixed addon icons/fanart

			Changelog 2.0.0:
			Rework for chinook 2.0
		</news>
	</extension>
</addon>
